Metadata-Version: 2.1
Name: albaretto
Version: 0.0.1
Summary: A DALL·E 2 image generation downloader. Permits easy upload to cloud services like Google Drive.
Author-email: Andrew Parsons <parsonsandrew1@gmail.com>
Maintainer-email: Andrew Parsons <parsonsandrew1@gmail.com>
License: MIT License
        
        Copyright (c) 2022 Andrew Parsons
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Keywords: dalle,dalle2,openai,download,drive,save
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE

# albaretto

**A DALL·E 2 image generation downloader. Permits easy upload to cloud services like Google Drive.**

---

⚠️ Programmatically accessing DALL·E 2 may be against OpenAI's terms of service. Proceed at your own risk.

> 3. Usage Requirements
> 
> (e) You may not use web scraping, web harvesting, or web data extraction methods to extract data from the Services, the Content, or OpenAI’s or its affiliates’ software, models or systems.

https://openai.com/api/policies/terms/

---

## Usage

```shell
$ albaretto <openai-bearer-token> google-drive <credentials.json>
# perform OAuth 2.0 authentication with a web browser

[albaretto] [google-drive] > fetch <task-id>
  ✓ Fetched <image-generation-id-1> (356.89 KiB)
  ✓ Fetched <image-generation-id-2> (340.39 KiB)
  ✓ Fetched <image-generation-id-3> (279.75 KiB)
  ✓ Fetched <image-generation-id-4> (401.94 KiB)

[albaretto] [google-drive] > save <folder-id>
  ✓ Saved <image-generation-id-1>.webp to <folder-id>
  ✓ Saved <image-generation-id-2>.webp to <folder-id>
  ✓ Saved <image-generation-id-3>.webp to <folder-id>
  ✓ Saved <image-generation-id-4>.webp to <folder-id>

# only fetch generated images 2 and 3 (one-indexed from left to right as displayed in the UI)
[albaretto] [google-drive] > fetch <task-id> -g 2 -g 3
  ✓ Fetched <image-generation-id-2> (340.39 KiB)
  ✓ Fetched <image-generation-id-3> (279.75 KiB)
```

The above workflow is the same for saving to the local filesystem, i.e.

```shell
$ albaretto <openai-bearer-token> local-filesystem

[albaretto] [local-filesystem] > fetch <task-id>
...

[albaretto] [local-filesystem] > save /path/to/output/directory
...
```

---

## Authentication

### OpenAI's DALL·E 2

Prerequisite: must have access to OpenAI's DALL·E 2 

1. Navigate to (and possibly log into) https://labs.openai.com/.
2. Open *Developer Tools* in your web browser and navigate to the *Network* tab.
3. On https://labs.openai.com/, type a prompt and click "Generate".
4. Look for request to https://labs.openai.com/api/labs/tasks.
5. Look for authorization in the request header. The bearer token will begin with `sess-`.
6. Copy the bearer token.

### Google Drive
 
- https://developers.google.com/drive/api/guides/about-auth
- https://developers.google.com/workspace/guides/create-project
- https://developers.google.com/workspace/guides/create-credentials

Required scopes ([documentation](https://developers.google.com/identity/protocols/oauth2/scopes#drive)):

- https://www.googleapis.com/auth/drive.metadata
- https://www.googleapis.com/auth/drive

Unaffiliated informational resources:
- https://www.youtube.com/watch?v=10ANOSssdCw

---

## Limitations

As far as I know, there is no way to pipe `|` or push `>` data through Typer or Click commands.

Ideally, the command line interface would work like this:

```shell
$ albaretto <openai-bearer-token> google-drive <credentials.json>

# where `save` takes arguments folder-id and a list of files
[albaretto] [google-drive] > fetch <task-id> | save <folder-id>
```

But I don't know of a way to achieve the above. Instead, the `fetch` command saves output into the `typer.Context`, whence the data is retreived by `save`.

This program **does not** provide full nor robust UNIX-like utilities for interacting with OpenAI's DALL·E 2 or Google Drive.

---

## Similar projects

- https://github.com/ezzcodeezzlife/dalle2-in-python

---

## Why . . . ?

**Why does this program exist?** I found it tedious to save and then re-upload the images generated by OpenAI's DALL·E 2 using the user interface.

**Why is it named `albaretto`?** Doctors Giuseppe and Mara Albaretto were patrons and collectors of Salvador Dalí's work.
